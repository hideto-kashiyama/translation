<div class="container">
    
<meta charset="UTF-8">   

<div class="up_group"><button class="mic" type="submit" onclick =" recstart()">
 
          <i class="fa fa-microphone fa-3x"><a id="rscap">音声入力開始　  </a></i>
          
</button>

<button id="stcap" onclick="recstop()">音声入力停止</button></div><a id="recap">現在音声入力停止中</a></i></div>

<div><%= form_tag(url_for(:action => 'index'), :remote => true) do %>

  <div><%= text_area_tag :transval, nil, placeholder: "", id:"result_text", size: "60x10" %></div>
  <div><label class="translabel" ></label>
  <button id="tbtn" onclick="trans()">翻訳</button>
  
<div><textarea id="txtTarget" rows="10" cols="60" ></textarea></div>

<% end %></div>

<button class="mic1" type="submit" onclick ="speak()">
    
      <i class="fa fa-volume-up fa-3x"><a class="rcap">もう一度しゃべる</a></i>
      
</button>

<button id="tclear" onclick="txtclear()">テキストクリア</button>
<!--<a href="/home/ctg">登録ページへ</a>-->


  
 <button id= "tlink">登録ページへ</button><br>
 
 <button id= "blink">登録された文章ページへ</button>
 
 

<script>

$(function(){
    
    $('#blink').click(function() {
        
        location.href="/home/master";
    
     });
});

$(function(){
    
    $('#tlink').click(function() {
        
        recstop();//録音停止
        
        var param = $("#result_text").val();
        param = encodeURIComponent(param);
         
        var paramt = $("#txtTarget").val();
        paramt= encodeURIComponent(paramt);
        
          //文字が入ってる時だけ実行
        if (param != ""){
             
            if (paramt != ""){
      
             window.location.href="/home/ctg?param=" + param +"&" + "?paramt=" + paramt;
      　　　
      　　　 }else{
      　　　 
      　　　 alert('翻訳文がありません' );
      　　　     
      　　　}
      　　　
        }else{
            
            
　            alert('テキストがありません');
            
        }　
    
       
    });
});


 var stopflag=1; //録音状態　1: 停止状態　0:録音中状態

 var jeflag=1; //言語切り替えフラグ　1: 日本語　0:英語

 var gid; //言語判定　1: 日本語　0:英語
 
　 // 録音(音声認識)による翻訳開始
　function recstart() { //音声入力開始
　      $('#recap').hide();//現在音声入力停止中
　     
　      if (stopflag==1) { //停止状態なら　初期状態
　     　  console.log('初期状態');
　         recognition.start();//startして
　         stopflag=0;//start状態にする
　           var txt;
　           if (jeflag==1) {
　               
    　         $('#rscap').text("");//音声入力開始を消す
          　   $('#rscap').text("日本語認識中..");
              tenmetu('mic');//点滅
    　         $('#rscap').css('color','green'); 
                gid=1;
                
　           } else {
　               
　                $('#rscap').text("");//音声入力開始を消す
              　   $('#rscap').text("英語認識中....");
                  tenmetue('mic');//点滅
　 　             $('#rscap').css('color', 'Red');
                gid=0;
　               
　           }
　           
　     } else {　//録音中なら
　        console.log('録音中');
　     
           if (jeflag==1) {
               
                   recognition.stop()
                   
                   jeflag=0;
                   
                      $('#rscap').text("");//音声入力開始を消す
                  　   $('#rscap').text("英語認識中....");
                      tenmetue('mic');//点滅
                    $('#rscap').css('color', 'Red');
                    gid=0;
                    
                   
                } else {
                    recognition.stop()
                   
                    jeflag=1;
                    
                     $('#rscap').text("");//音声入力開始を消す
                  　 $('#rscap').text("日本語認識中..");
                     tenmetu('mic');//点滅
                    $('#rscap').css('color', 'green');
                    gid=1;
                
                }
    
　     }         
　     
　 }
　 
　  function recstop() {　//音声入力停止
　      
　      recognition.stop()
　      stopflag=1;
　      $('#rscap').text("音声入力開始");
        $('#rscap').css('color', 'black');
        $('.mic').css('background-color', 'white');
        $('#recap').show();
        $('.translabel').text("");
　      
　  }
　 
　 window.SpeechRecognition = window.SpeechRecognition || webkitSpeechRecognition;
           var recognition = new webkitSpeechRecognition();
           recognition.interimResults = true;
        　 recognition.continuous = true;
           //最大2個の認識仮説を取得する
           //recognition.maxAlternatives = 2;
           
           recognition.onstart = function() {
                 if (gid==1) { 
                   recognition.lang='ja-JP';
                   console.log("日本語認識中");
                 } else {
                     
                      recognition.lang='en-US';
                　　　console.log("英語認識中");
                 }
             　　
             　　recognition.onnomatch = function() {
               
               　　　 $('#result_text').text("もう一度試してください");
               
          　　　  };
            
            };
            
             recognition.onspeechstart= function() {
                 
                 if (gid==1) { 
                     
                   recognition.lang='ja-JP';
                   console.log("会話中日本語認識中");
                   
                 } else {
                     
                  recognition.lang='en-US';
            　　　console.log("録音状態からリスタート");
                 } 
             
             };   
                 
            
         
            recognition.onend= function() {
                
                if (stopflag==0) { 
                    
                   recognition.start();
                 
                 }
                
            }
            
           
            recognition.onresult = function(event) {
                var results = event.results;
                for (var i = event.resultIndex; i < results.length; i++) {
                    if (results[i].isFinal) {
                       
                          $('#result_text').text(results[i][0].transcript);
                         
                          gengochk(results[i][0].transcript);
                         
                          $("#tbtn").click();//翻訳開始
                       
                         }
                     
                    }
                };
                
                if (stopflag==0) {　//録音中なら
                
                   recognition.onend = () => { recognition.start() };
                
                }

               // recognition.start();

   /*ここまで録音による翻訳*/

//#result_textに文字を直接入力またはコピペした場合の翻訳
//言語判定　gid取得 　1: 日本語　0:英語
 function gengochk(value) { // 録音による翻訳の言語判定（日本語か英語か）に使う
　    
                let error;
                
                if(value.match(/[ぁ-ん]/g)){ //ひらがな含む
                    
                  error = true;
                  
                } else if (value.match(/[\u4E00-\u9FFF]/)) {　//漢字のみ　例えば　「明日」など
            
                　 error = true; 
                  
                }
                
                if(error){
                    
                    gid=1;
                    console.log("japanese!"+gid);
                   
                 
                }else{
                    
                    gid=0;
                    console.log("english!"+gid);
                   
                }
   
　}
//$(function() {
  
 　$("#result_text").keyup(function(e){
 　   
     if(e.which == 13){　//エンターキー　アップ時
               //result_text"の言語判定　gid取得
         　　　　　let error;
                let value = $(this).val();
                
                if(value.match(/[ぁ-ん]/g)){
                    
                  error = true;
                } else if (value.match(/[\u4E00-\u9FFF]/)) {
                    
                   error = true; 
                  //m = t.match(/[\u4E00-\u9FFF]/); 
                  
                }
                
                if(error){
                    
                    gid=1;
                    console.log("japanese!"+gid);
                　  
                    $("#tbtn").click();//翻訳開始
                    
                }else{
                    
                    gid=0;
                    console.log("english!"+gid);
                   
                    $("#tbtn").click();//翻訳開始
                    
                }
                //ここまで#result_textに文字を直接入力またはコピペした場合の翻訳
　　　　　
     }
     
　});
　
//}); 
</script>