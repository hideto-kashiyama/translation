  //Web Speech Synthesis API（音声合成API）
 //参考https://github.com/codegrid/2016-web-speech-api/blob/gh-pages/speech_synthesis/demo_simple_en.html
$(function() {
 //var selectval=$("input[name='je']:checked").val(); //$('[name=gengo]').val();
  //英語0 日本語1
//console.log(selectval);
   
  //helpers/home_helper.rb  translate英訳　translatej 和訳
  if(gid==1) {
       var transtext="<%= translate %>";
       
     } else {
     
        var transtext="<%= translatej%>";
     }  
 
 var txt=transtext.replace( /&amp;#39;/g , "'" );

 $('#txtTarget').val(txt);
 
  
   var text =  $('#txtTarget').val();
 
    var uttr = new SpeechSynthesisUtterance();
    uttr.text = text;
     if(gid==1) {
        uttr.lang = 'en-US';
       speechSynthesis.speak(uttr);
       
       setTimeout(function(){
        
            txt1="";
            $('.translabel').text("");
            $('.translabel').text("翻訳完了！");
            tenmetut('translabel');//点滅
            console.log("google english")
           
        },2000);
 
     } else {
     
      var radio_sp= $("input[name='sp']:checked").val();　//日本語音声選択値 0 :AITalk_ruby  1:AITalk_js    2:google
         
         if ( radio_sp==2 ) {
             
           uttr.lang = 'ja-JP';
           speechSynthesis.speak(uttr);
           
          } else {
          
         // $('#txtTarget').change(function() {
              //値が変更されたときの処理
              
            if ( radio_sp==0 ) {
             $("#aimbtn").click();//AITalk ruby音声
          setTimeout(function(){
                txt1="";
                $('.translabel').text("");
                $('.translabel').text("翻訳完了！");
                tenmetut('translabel');//点滅
                
              
            
                //AITalk_start();//AITalk ruby音声
                  console.log("AITruby")
    
           },500);
    
           } else {
         
            setTimeout(function(){
            txt1="";
            $('.translabel').text("");
            $('.translabel').text("翻訳完了！");
            tenmetut('translabel');//点滅
            
              start();//AITalk javascript音声
              console.log("AITjs")
    
            },500);
    
        }
        
       //});
          
      }   

     }
     
    <%= atk %>
     
// AITalk WebAPI を扱うクラス
		function AITalkWebAPI()	{
			this.URL = 'https://webapi.aitalk.jp/webapi/v2/ttsget.php';
	    	this.ID = 'WES';	// ユーザ名(接続ID)
			this.PW = 'p4yPMbXP';	// パスワード(接続パスワード)
　　　　　　var hi =new Date();

			this.username = this.ID;
			this.password = this.PW;
			this.speaker_name 	= 'nozomi_emo';		// 話者名
			this.style 			= '{"j":"1.0"}'; 	// 感情パラメータ
			this.input_type 	= 'text'; 			// 合成文字種別
			this.text 			= ''; 				// 合成文字
			this.volume 		= 1.0; 				// 音量（0.01-2.00）
			this.speed 			= 1.0; 				// 話速（0.50-4.00）
			this.pitch 			= 1.0; 				// ピッチ（0.50-2.00）
			this.range 			= 1.0; 				// 抑揚（0.00-2.00）
			this.output_type 	= 'sound'; 			// 出力形式
			this.ext 			= 'mp3'; 			// 出力音声形式
		}

		// WebAPIに送るパラメータ文字列の取得
		AITalkWebAPI.prototype.getEncodedParam = function() {
			var query = {
				'username'		: this.username,
				'password'		: this.password,
				'speaker_name'	: this.speaker_name,
				'style'			: this.style,
				'input_type'	: this.input_type,
				'text'			: this.text,
				'volume'		: this.volume,
				'speed'			: this.speed,
				'pitch'			: this.pitch,
				'range'			: this.range,
				'output_type'	: this.output_type,
				'ext'			: this.ext,
			};
			// パラメータをエンコードして=で繋ぐ
			var params = [];
			for( key in query ) {
				var param = '';
				param += encodeURIComponent(key);
				param += '=';
				param += encodeURIComponent(query[key]);
				params.push(param);
			}
			// 全てのパラメータを&で繋いで半角スペースを修正
			return params.join('&').replace(/%20/g, '+');
		};

		// 音声合成
		AITalkWebAPI.prototype.synth = function() {
			var status = document.getElementById('status');
			if( ! window.XMLHttpRequest ) {
				status.innerHTML = "対応していないブラウザです。";
				return;
			}

			var req;
			req = new XMLHttpRequest();
			req.responseType = "blob";
			
			// WebAPIのステータスが変更されたイベントハンドラ
			req.onreadystatechange = function() {
				if( req.readyState == XMLHttpRequest.DONE ) {
					if( req.status != 200 ) {	// 合成エラー
						var err_msg = "HTTPError, Code: " + req.status;
						err_msg += ", " + req.statusText;
						status.innerHTML = err_msg;
					} else {					// 合成成功
						var audio = document.getElementById('audio');
						audio.src = window.URL.createObjectURL(req.response);
						status.innerHTML = "合成に成功しました";
					}
				} else {						// 構成中
					status.innerHTML = "合成を実行しています";
				}
			};

			// 通信
			req.open('POST', this.URL, true);
			req.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
			req.send(this.getEncodedParam());
		}

      
		// AITalk js合成
		function start() {

			// (1) 合成内容設定
				var target_text = $('#txtTarget').val();

			// (2) AITalkWebAPIを使うためのインスタンス作成
			var aitalk = new AITalkWebAPI();

			// (3) インスタンスに指定したいパラメータをセット
			aitalk.text = target_text;
			// aitalk.speaker_name = 'nozomi_emo';
			// aitalk.style = '{"j":"1.0"}';

			// (3) 合成
			aitalk.synth();
		}
		

     
	
});

 
 

 

